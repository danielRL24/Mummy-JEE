<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <ui:composition template="/template.xhtml">
        <ui:define name="title">
            <h:outputText value="#{bundle.ListTaskTitle}"></h:outputText>
        </ui:define>
        <ui:define name="body">
            <h1>Your tasks</h1>
            <div class="nav-wrapper">
            <h:form>
                <div class="file-field input-field row">
                    <div class="file-path-wrapper col s12 m4">
                        <h:inputText id="search" value="#{userController.searchTerm}" title="Search"/>
                    </div>
                    <h:commandLink action='#{userController.searchForTask()}' class="waves-effect waves-light btn">
                        <i class="material-icons">search</i>
                    </h:commandLink>
                </div>
            </h:form>
            </div>
            <h:form styleClass="jsfcrud_list_form">
                <h:panelGroup id="messagePanel" layout="block">
                    <h:messages errorStyle="color: red" infoStyle="color: green" layout="table"/>
                </h:panelGroup>
                <h:outputText escape="false" value="#{bundle.ListTaskEmpty}" rendered="#{userController.paginator.model.size() == 0}"/>
                <h:panelGroup rendered="#{taskController.items.rowCount > 0}">
                    <ul class="collapsible" data-collapsible="accordion">   
                        <ui:repeat value="#{userController.paginator.model}" var="item">
                            <h:panelGroup rendered="#{item != null}">
                            <li>
                                <!--if the task has parent, display it differently -->
                                <div class="collapsible-header #{(item.fkParent!=null) ? 'blue-grey lighten-5':''} ">          

                                    <!--if the task has parent, display it differently -->
                                    <h:outputText value="#{item.title} #{(item.fkParent!=null) ?  ('&#9562;>'+=item.fkParent.title): ''}"/>                                                                                                         
                                    <div class="progress">
                                        <div class="determinate" style="width: #{item.getTimeLeft().get(3)/item.getLength()*100}%"></div>
                                    </div>                                                   
                                </div>
                                <div class="collapsible-body">                                    
                                    <div class="row">
                                        <div class="col s6">    
                                            <p>
                                                <span class="title grey-text">#{bundle.ListTaskTitle_end}: </span>
                                                <h:outputText value="#{item.end}">
                                                    <f:convertDateTime pattern="MM/dd/yyyy HH:mm:ss" />
                                                </h:outputText>
                                            </p>
                                            <p>
                                                <span class="title grey-text">#{bundle.ListTaskTitle_progression}: </span>                                      
                                                <h:outputText value="#{item.progression}"/>                                             
                                            </p>
                                            <p>
                                                <span class="title grey-text">#{bundle.ListTaskTitle_fkPriority}: </span>        
                                                <h:outputText value="#{item.fkPriority.name}"/>
                                            </p>

                                        </div>
                                        <div class="col s6">
                                            <p>
                                                <h:outputText value="Time left: " class="title grey-text"/>
                                                <h:outputText value="#{item.getTimeLeft().get(3)} Days  "/>                                                             
                                                <h:outputText value="#{item.getTimeLeft().get(2)} Hours "/>
                                                <h:outputText value="#{item.getTimeLeft().get(1)} Min "/>
                                                <h:outputText value="#{item.getTimeLeft().get(0)} Sec "/>
                                            </p>

                                            <p>
                                                <h:outputText value="Task lenght: " class="title grey-text"/>
                                                <h:outputText value="#{item.getLength()} days"/>
                                            </p>

                                            <p>
                                                <h:outputText value="Sub-tasks:" class="title grey-text"/>
                                                <ul class="collection">
                                                    <ui:repeat value="#{item.taskCollection}" var="child">
                                                        <li class="collection">
                                                            <h:commandLink action="#{taskController.prepareView2(child)}" class="collection-item">
                                                                <h:outputText value="#{child.title}" class="blue-text"/> 
                                                                <div class="progress grey">                               
                                                                    <div class="determinate blue" style="width: #{child.getTimeLeft().get(3)/child.getLength()*100}%"></div>
                                                                </div> 
                                                            </h:commandLink>
                                                        </li>
                                                    </ui:repeat>

                                                </ul>
                                            </p>
                                        </div>
                                    </div>

                                    <div class="row">                                            

                                        <div class="col s12">
                                            <span class="title grey-text">#{bundle.ListTaskTitle_description}</span>
                                            <p>
                                                <h:outputText value="#{item.description}"/>
                                            </p>
                                        </div>
                                    </div>
                                    <h:commandLink action="#{taskController.prepareView2(item)}" value="#{bundle.ListTaskViewLink}" class="waves-effect green waves-light btn">
                                        <i class="material-icons left">open_in_new</i>
                                    </h:commandLink>
                                    <h:outputText value=" "/>
                                    <h:panelGroup rendered="#{taskController.checkObservator(userController.loggedUser, item) == true}">
                                        <h:commandLink action="#{taskController.prepareEdit2(item)}" value="#{bundle.ListTaskEditLink}" class="waves-effect blue waves-light btn">
                                            <i class="material-icons left">mode_edit</i>
                                        </h:commandLink>
                                        <h:outputText value=" "/>
                                        <h:commandLink action="#{taskController.destroy2(item)}" value="#{bundle.ListTaskDestroyLink}" class="waves-effect red waves-light btn">
                                            <i class="material-icons left">delete</i>
                                        </h:commandLink>
                                        <h:outputText value=" "/> 
                                    </h:panelGroup>
                                </div>                               
                            </li>
                            </h:panelGroup>
                        </ui:repeat>
                    </ul>                         
                </h:panelGroup>
                <br />

                <ul class="pagination">
                    <h:panelGroup rendered="#{userController.paginator.pageIndex!=1}">
                        <li class="waves-effect active">
                            <h:commandLink action="#{userController.paginator.prev()}" value="#{bundle.Previous}"/>
                        </li>
                    </h:panelGroup>

                    <li class="disabled">
                        <a href="#!">
                            <h:outputText value="#{userController.paginator.pageIndex}/#{userController.paginator.pages}"/>
                        </a>
                    </li>

                    <h:panelGroup rendered="#{userController.paginator.pageIndex != userController.paginator.pages}">
                        <li class="waves-effect active">
                            <h:commandLink action="#{userController.paginator.next()}" value="#{bundle.Next}"/>
                        </li>
                    </h:panelGroup>
                    <h:inputHidden value="#{userController.paginator.pageIndex}"/>
                </ul>


                <div class="fixed-action-btn">
                    <h:commandLink action="#{taskController.prepareCreate}" title="#{bundle.ListTaskCreateLink}"  class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons left">add_circle_outline</i></h:commandLink>
                </div>
            </h:form>
            <br/>
        </ui:define>
        <ui:define name="script">
            <script>
            $( document ).ready(function() {
                #{userController.init()}
            });
            </script>
        </ui:define>
    </ui:composition>
</html>
